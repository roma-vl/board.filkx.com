#!/bin/bash
set -e

COLOR=$1
APP_DIR="/var/www/board.filkx.com"
RELEASE_DIR="$APP_DIR/$COLOR/current"
DOCKER_COMPOSE_FILE="$RELEASE_DIR/docker-compose.yml"
WORKDIR_IN_CONTAINER="/var/www/html"

# ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
if [[ "$COLOR" != "blue" && "$COLOR" != "green" ]]; then
  echo "‚ùå –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ: $COLOR"
  exit 1
fi

if [ ! -d "$RELEASE_DIR" ]; then
  echo "‚ùå –ü–∞–ø–∫–∞ —Ä–µ–ª—ñ–∑—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞: $RELEASE_DIR"
  exit 1
fi

echo "üöÄ –î–µ–ø–ª–æ–π —É $COLOR —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ"
cd "$RELEASE_DIR"

# üîó Shared user directories (adverts + banners)
[ -e "$RELEASE_DIR/storage/app/public/adverts" ] && rm -rf "$RELEASE_DIR/storage/app/public/adverts"
ln -sfn /var/www/board.filkx.com/shared/storage/app/public/adverts "$RELEASE_DIR/storage/app/public/adverts"

[ -e "$RELEASE_DIR/storage/app/public/banners" ] && rm -rf "$RELEASE_DIR/storage/app/public/banners"
ln -sfn /var/www/board.filkx.com/shared/storage/app/public/banners "$RELEASE_DIR/storage/app/public/banners"

# üîó Shared .env
rm -f "$RELEASE_DIR/.env"
ln -sfn /var/www/board.filkx.com/shared/.env "$RELEASE_DIR/.env"

# üõë –ó—É–ø–∏–Ω–∫–∞ –ø–æ—Ç–æ—á–Ω–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤
echo "üõë –ó—É–ø–∏–Ω–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."
docker-compose -f "$DOCKER_COMPOSE_FILE" down

# üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ —É —Ñ–æ–Ω—ñ
echo "üöÄ –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤..."
docker-compose -f "$DOCKER_COMPOSE_FILE" up -d

# üîê –ü—Ä–∞–≤–∞ (–¥–æ artisan migrate)
docker-compose -f "$DOCKER_COMPOSE_FILE" exec -T -w "$WORKDIR_IN_CONTAINER" laravel.test chown -R www-data:www-data storage bootstrap/cache
docker-compose -f "$DOCKER_COMPOSE_FILE" exec -T -w "$WORKDIR_IN_CONTAINER" laravel.test chmod -R 775 storage bootstrap/cache

# ‚öôÔ∏è –ú—ñ–≥—Ä–∞—Ü—ñ—ó
echo "‚öôÔ∏è –ú—ñ–≥—Ä–∞—Ü—ñ—ó..."
docker-compose -f "$DOCKER_COMPOSE_FILE" exec -T -w "$WORKDIR_IN_CONTAINER" laravel.test php artisan migrate --force

# üßπ –ö–µ—à—É–≤–∞–Ω–Ω—è
echo "üßπ –ö–µ—à—É–≤–∞–Ω–Ω—è..."
docker-compose -f "$DOCKER_COMPOSE_FILE" exec -T -w "$WORKDIR_IN_CONTAINER" laravel.test php artisan config:clear
docker-compose -f "$DOCKER_COMPOSE_FILE" exec -T -w "$WORKDIR_IN_CONTAINER" laravel.test php artisan config:cache
docker-compose -f "$DOCKER_COMPOSE_FILE" exec -T -w "$WORKDIR_IN_CONTAINER" laravel.test php artisan route:cache
docker-compose -f "$DOCKER_COMPOSE_FILE" exec -T -w "$WORKDIR_IN_CONTAINER" laravel.test php artisan view:cache

docker-compose -f "$DOCKER_COMPOSE_FILE" exec -T -w "$WORKDIR_IN_CONTAINER" laravel.test php artisan storage:link

echo "‚è≥ –û—á—ñ–∫—É—î–º–æ –ø–æ–≤–Ω—É –≥–æ—Ç–æ–≤–Ω—ñ—Å—Ç—å Elasticsearch..."

for i in {1..30}; do
    STATUS=$(curl -s http://localhost:9200/_cluster/health | jq -r '.status')

    if [[ "$STATUS" == "yellow" || "$STATUS" == "green" ]]; then
        echo "‚úÖ Elasticsearch —Å—Ç–∞—Ç—É—Å: $STATUS"
        break
    fi

    echo "üîÑ –°—Ç–∞—Ç—É—Å: $STATUS (—Å–ø—Ä–æ–±–∞ $i)"
    sleep 2
done

# –Ø–∫—â–æ –≤—Å–µ —â–µ –Ω–µ –≥–æ—Ç–æ–≤–∏–π ‚Äî –ø–æ–∫–∞–∑–∞—Ç–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è, –∞–ª–µ –Ω–µ –ø–∞–¥–∞—Ç–∏
FINAL_STATUS=$(curl -s http://localhost:9200/_cluster/health | jq -r '.status')
if [[ "$FINAL_STATUS" != "yellow" && "$FINAL_STATUS" != "green" ]]; then
    echo "‚ö†Ô∏è Elasticsearch –¥–æ—Å—ñ –Ω–µ –≥–æ—Ç–æ–≤–∏–π (—Å—Ç–∞—Ç—É—Å: $FINAL_STATUS). –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ search:init"
else
    docker-compose -f "$DOCKER_COMPOSE_FILE" exec -T -w "$WORKDIR_IN_CONTAINER" laravel.test php artisan search:init
    docker-compose -f "$DOCKER_COMPOSE_FILE" exec -T -w "$WORKDIR_IN_CONTAINER" laravel.test php artisan search:reindex
fi


# üîó –ü–µ—Ä–µ–º–∏–∫–∞—î–º–æ current
ln -sfn "$APP_DIR/$COLOR/current" "$APP_DIR/current"

echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –ê–∫—Ç–∏–≤–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ ‚Äî $COLOR"
